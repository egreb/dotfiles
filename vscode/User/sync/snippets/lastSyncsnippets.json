{"ref":"720e945f-e7ec-48d5-ad5a-2980dd4bc102","content":"{\"version\":1,\"machineId\":\"5f89f902-d033-4bb0-9993-a1e6b5e579a4\",\"content\":\"{\\\"javascript.json\\\":\\\"{\\\\n\\\\n\\\\t// Place your snippets for JavaScript here. Each snippet is defined under a snippet name and has a prefix, body and\\\\n\\\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n\\\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the\\\\n\\\\t// same ids are connected.\\\\n\\\\t// Example:\\\\n\\\\t\\\\\\\"Print to console\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n\\\\t}\\\\n\\\\n}\\\\n\\\",\\\"javascriptreact.json\\\":\\\"{\\\\n\\\\n\\\\t// Place your snippets for JavaScript React here. Each snippet is defined under a snippet name and has a prefix, body and\\\\n\\\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n\\\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the\\\\n\\\\t// same ids are connected.\\\\n\\\\t// Example:\\\\n\\\\t\\\\\\\"Print to console\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n\\\\t}\\\\n\\\\n}\\\\n\\\",\\\"php.json\\\":\\\"{\\\\n/*\\\\n\\\\t // Place your snippets for PHP here. Each snippet is defined under a snippet name and has a prefix, body and \\\\n\\\\t // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n\\\\t // $1, $2 for tab stops, ${id} and ${id:label} and ${1:label} for variables. Variables with the same id are connected.\\\\n\\\\t // Example:\\\\n\\\\t \\\\\\\"Print to console\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n\\\\t}\\\\n*/\\\\n}\\\",\\\"typescriptreact.json\\\":\\\"{\\\\n  \\\\\\\"insert twin.macro import\\\\\\\": {\\\\n    \\\\\\\"prefix\\\\\\\": \\\\\\\"twimp\\\\\\\",\\\\n    \\\\\\\"body\\\\\\\": [\\\\n      \\\\\\\"import 'twin.macro'\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"use translation hook\\\\\\\": {\\\\n    \\\\\\\"prefix\\\\\\\": \\\\\\\"uset\\\\\\\",\\\\n    \\\\\\\"body\\\\\\\": [\\\\n      \\\\\\\"const {t} = useTranslation()\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"usecl\\\\\\\": {\\\\n    \\\\\\\"prefix\\\\\\\": \\\\\\\"usecl\\\\\\\",\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"\\\\\\\",\\\\n    \\\\\\\"body\\\\\\\": [\\\\n      \\\\\\\"const queryClient = useQueryClient();\\\\\\\",\\\\n      \\\\\\\"\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"usetr\\\\\\\": {\\\\n    \\\\\\\"prefix\\\\\\\": \\\\\\\"usetr\\\\\\\",\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"\\\\\\\",\\\\n    \\\\\\\"body\\\\\\\": [\\\\n      \\\\\\\"const { t } = useTranslation();\\\\\\\",\\\\n      \\\\\\\"\\\\\\\"\\\\n    ]\\\\n  }\\\\n}\\\"}\"}"}